[{"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\index.js":"1","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\reportWebVitals.js":"2","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\App.js":"3","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\pages\\Signup.js":"4","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\pages\\Home.js":"5","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\pages\\Profile.js":"6","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\pages\\Login.js":"7","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\components\\Header\\index.js":"8","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\components\\Footer\\index.js":"9","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\utils\\auth.js":"10","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\utils\\mutations.js":"11","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\components\\Charts\\LineChart.js":"12","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\utils\\queries.js":"13","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\components\\ChartEditor.js":"14"},{"size":544,"mtime":1642639966120,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1635116964956,"results":"17","hashOfConfig":"16"},{"size":1983,"mtime":1642380093618,"results":"18","hashOfConfig":"16"},{"size":3056,"mtime":1642645755020,"results":"19","hashOfConfig":"16"},{"size":314,"mtime":1642485680503,"results":"20","hashOfConfig":"16"},{"size":3554,"mtime":1645603041854,"results":"21","hashOfConfig":"16"},{"size":2751,"mtime":1644907928461,"results":"22","hashOfConfig":"16"},{"size":1295,"mtime":1644908226731,"results":"23","hashOfConfig":"16"},{"size":866,"mtime":1642439477913,"results":"24","hashOfConfig":"16"},{"size":1084,"mtime":1635116964958,"results":"25","hashOfConfig":"16"},{"size":1194,"mtime":1645603506081,"results":"26","hashOfConfig":"16"},{"size":364,"mtime":1645054146908,"results":"27","hashOfConfig":"16"},{"size":248,"mtime":1645330549067,"results":"28","hashOfConfig":"16"},{"size":5485,"mtime":1645601646713,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ljbv8h",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\index.js",[],["62","63"],"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\reportWebVitals.js",[],"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\App.js",[],"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\pages\\Signup.js",[],"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\pages\\Home.js",[],"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\pages\\Profile.js",["64","65","66"],"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\pages\\Login.js",["67"],"import React, { useState } from 'react';\r\nimport { Card, Form, Button } from 'react-bootstrap'\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Login = (props) => {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  // update state based on form input changes\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // submit form\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n\r\n    <Card style={{ width: '50%' }}>\r\n      <Card.Body>\r\n        <Card.Title>Welcome Back!</Card.Title>\r\n        <Card.Subtitle className=\"mb-2 text-muted\">Login to your account</Card.Subtitle>\r\n\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control \r\n              className=\"form-input\"\r\n              placeholder=\"Enter email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              value={formState.email}\r\n              onChange={handleChange}\r\n              \r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control \r\n              className=\"form-input\"\r\n                placeholder=\"******\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={formState.password}\r\n                onChange={handleChange}\r\n                \r\n            />\r\n          </Form.Group>\r\n\r\n          <Button \r\n            variant=\"primary\" \r\n            type=\"submit\"\r\n            onClick={handleFormSubmit}\r\n          >\r\n            Submit\r\n          </Button>\r\n          {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n        </Form>\r\n        <br />\r\n        <Card.Link href=\"/signup\">Don't have an account? Sign Up!</Card.Link>\r\n\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\components\\Header\\index.js",[],"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\components\\Footer\\index.js",[],"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\utils\\auth.js",[],"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\utils\\mutations.js",[],"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\components\\Charts\\LineChart.js",["68"],"import { Line } from 'react-chartjs-2'\r\nimport {Chart as ChartJS} from 'chart.js/auto'\r\n\r\nconst LineChart = (props) => {\r\n\r\n  return (\r\n    <Line\r\n      data={{\r\n        labels: props.l,\r\n        datasets: [\r\n          {\r\n            label: props.title,\r\n            data: props.d,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LineChart;","C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\utils\\queries.js",[],"C:\\Users\\nicol\\bootcamp-class\\GraphBuddy\\graph-buddy\\src\\components\\ChartEditor.js",["69","70","71","72","73","74"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport {useMutation} from '@apollo/client'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport {Container, Form, Button, FormGroup} from 'react-bootstrap'\r\nimport LineChart from './Charts/LineChart';\r\nimport { ADD_GRAPH, UPDATE_GRAPH } from '../utils/mutations';\r\n\r\nconst ChartEditor = ({currentGraph, setCurrentGraph, setGraphHistory, graphHistory, title, setTitle}) => {\r\n    const [x, setX] = useState('')\r\n    const [y, setY] = useState('')\r\n    const [updateGraph, {error}] = useMutation(UPDATE_GRAPH)\r\n    const [addGraph] = useMutation(ADD_GRAPH)\r\n    const labelsRef = useRef()\r\n    const dataRef = useRef()\r\n  \r\n    const handleGraph = async (e) => {\r\n      console.log('saving...', labelsRef.current.value, dataRef.current.value)\r\n      e.preventDefault()\r\n      if(title !==''){\r\n        \r\n        let db_X = 'N/A'\r\n        let db_Y = '0'\r\n        const num = y\r\n        const string = x\r\n        const updatedGraph = {...currentGraph}\r\n        if(x !== '' && y !== ''){\r\n          console.log(x,y,updatedGraph)\r\n          updatedGraph.labels = [...updatedGraph.labels, x]\r\n          updatedGraph.data = [...updatedGraph.data, y]\r\n          db_X = x\r\n          db_Y = y\r\n        }\r\n        updatedGraph.title = title\r\n\r\n        setCurrentGraph(updatedGraph)\r\n        \r\n        console.log('handling save for id: ', currentGraph.id, 'and title: ', title)\r\n\r\n\r\n        if(currentGraph.id === ''){\r\n            updatedGraph.id = uuidv4()\r\n            setGraphHistory((prev) => [...prev, updatedGraph])\r\n            console.log('added graph array: ', updatedGraph.id,db_X,db_Y,title)\r\n\r\n            try{\r\n              const {data} = await addGraph({\r\n                variables: {\r\n                  id: updatedGraph.id,\r\n                  title: title,\r\n                  labels: db_X,\r\n                  data: db_Y\r\n                }\r\n              })\r\n              console.log(data)\r\n            } catch (err){\r\n              console.log('errors found: ', err)\r\n            }\r\n        }\r\n        else if (updatedGraph.title !== currentGraph.title || (x !== '' && y !== '')){\r\n            const updatedArr = graphHistory.map((el) =>{\r\n                if(el.id===updatedGraph.id){\r\n                    return el = updatedGraph\r\n                }\r\n                else{\r\n                    return el\r\n                }\r\n            })\r\n            console.log('updated graph array: ', currentGraph.id,db_X,db_Y,title)\r\n            setGraphHistory(updatedArr)\r\n            try{\r\n              const {data} = await updateGraph({\r\n                variables: {\r\n                  id: currentGraph.id,\r\n                  title: title,\r\n                  labels: db_X,\r\n                  data:  db_Y,\r\n                }\r\n              })\r\n              console.log(data)\r\n            } catch (err){\r\n              console.log('errors found: ', err)\r\n            }\r\n        }\r\n        console.log('finish')\r\n\r\n        setX('')\r\n        setY('')\r\n      }\r\n    }\r\n\r\n    const handleGrapher = async (e) => {\r\n      e.preventDefault()\r\n      setX('')\r\n      setY('')\r\n      console.log(currentGraph)\r\n      console.log(labelsRef.current.value, dataRef.current.value)\r\n      try{\r\n        const {data} = await addGraph({\r\n          variables: {\r\n            id: uuidv4(),\r\n            title: title,\r\n            labels: x,\r\n            data: y,\r\n          },\r\n        })\r\n      }catch(err){\r\n        console.log(err)\r\n      }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n\r\n        <Form style={{width:'50%'}}>\r\n            \r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>Chart Title</Form.Label>\r\n            <Form.Control \r\n              type=\"text\" \r\n              placeholder=\"Enter Chart Title...\"\r\n              value={title} \r\n              onChange={(event) => setTitle(event.target.value)}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n  \r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Label>New Data Point</Form.Label>\r\n            <Form.Control \r\n              type=\"text\" \r\n              placeholder=\"Enter data point label...\"\r\n              value={x} \r\n              onChange={(event) => setX(event.target.value)}\r\n              ref={labelsRef}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n  \r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Label>Value</Form.Label>\r\n            <Form.Control \r\n              type=\"text\" \r\n              placeholder=\"Enter Number Value\"\r\n              value={y}\r\n              onChange={(event) => setY(event.target.value)}\r\n              ref={dataRef}\r\n            />\r\n          </Form.Group>\r\n  \r\n          <Button \r\n            variant=\"success\"\r\n            onClick={(e) => handleGraph(e)}\r\n          >\r\n            Update and Save\r\n          </Button>\r\n          {error && (\r\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n        </Form>\r\n        <LineChart l={currentGraph.labels} d={currentGraph.data} title={currentGraph.title}/>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ChartEditor;",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":9,"nodeType":"81","messageId":"82","endLine":5,"endColumn":13},{"ruleId":"79","severity":1,"message":"83","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":17},{"ruleId":"84","severity":1,"message":"85","line":32,"column":5,"nodeType":"86","endLine":32,"endColumn":14,"suggestions":"87"},{"ruleId":"79","severity":1,"message":"88","line":10,"column":26,"nodeType":"81","messageId":"82","endLine":10,"endColumn":30},{"ruleId":"79","severity":1,"message":"89","line":2,"column":18,"nodeType":"81","messageId":"82","endLine":2,"endColumn":25},{"ruleId":"79","severity":1,"message":"90","line":1,"column":34,"nodeType":"81","messageId":"82","endLine":1,"endColumn":43},{"ruleId":"79","severity":1,"message":"91","line":4,"column":34,"nodeType":"81","messageId":"82","endLine":4,"endColumn":43},{"ruleId":"79","severity":1,"message":"92","line":23,"column":15,"nodeType":"81","messageId":"82","endLine":23,"endColumn":18},{"ruleId":"79","severity":1,"message":"93","line":24,"column":15,"nodeType":"81","messageId":"82","endLine":24,"endColumn":21},{"ruleId":"79","severity":1,"message":"94","line":91,"column":11,"nodeType":"81","messageId":"82","endLine":91,"endColumn":24},{"ruleId":"79","severity":1,"message":"88","line":98,"column":16,"nodeType":"81","messageId":"82","endLine":98,"endColumn":20},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'LineChart' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'graphData.graphs'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'data' is assigned a value but never used.","'ChartJS' is defined but never used.","'useEffect' is defined but never used.","'FormGroup' is defined but never used.","'num' is assigned a value but never used.","'string' is assigned a value but never used.","'handleGrapher' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [graphData.graphs, loading]",{"range":"100","text":"101"},[923,932],"[graphData.graphs, loading]"]